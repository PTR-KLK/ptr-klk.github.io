{"version":3,"sources":["webpack:///./src/components/hero/author/author.style.js","webpack:///./src/components/hero/author/author.js","webpack:///./src/components/hero/authorButton/authorButton.style.js","webpack:///./src/components/hero/authorButton/authorButton.js","webpack:///./src/components/hero/hero.actions.js","webpack:///./src/components/hero/hero.style.js","webpack:///./src/components/hero/hero.js","webpack:///./src/components/list/list.style.js","webpack:///./src/components/list/list.js","webpack:///./src/pages/index.js"],"names":["Container","styled","section","theme","rgba","primary","Image","Img","boxShadow","Heading","h2","secondary","connect","authorVisible","useStaticQuery","me","frontpage","nodes","html","fluid","childImageSharp","objectFit","alt","button","text","dispatch","toggleAuthorVisible","type","aria-label","title","onClick","Hero","graph","data","ListItem","str","frontmatter","last_modified","Date","toLocaleDateString","to","fields","slug","description","excerpt","List","heading","list","details","map","node","key","id","Home","siteMetadata","site","recommended","edges","latest"],"mappings":"4PAKaA,EAAYC,UAAOC,QAAV,6EAAGD,CAAH,yKAMN,gBAAGE,EAAH,EAAGA,MAAH,OAAeC,YAAKD,EAAME,QAAS,OAetCC,EAAQL,kBAAOM,KAAV,yEAAGN,CAAH,iRACd,gBAAGE,EAAH,EAAGA,MAAH,OAAeK,YAAUL,MAsBhBM,EAAUR,UAAOS,GAAV,2EAAGT,CAAH,2HAGT,qBAAGE,MAAkBQ,aCLjBC,eAzCS,SAAC,GACvB,MAAO,CAAEC,cADoC,EAApBA,iBAyCa,KAAzBD,EAtCA,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAMhCC,yBAAe,cAJjBC,EAFkC,EAElCA,GAEUC,EAJwB,EAGlCA,UACEC,MAJgC,GA4BpC,OAAOJ,EACL,kBAACb,EAAD,KACE,kBAAC,IAAD,CAAWkB,KAAMF,EAAUE,MACzB,kBAACZ,EAAD,CAAOa,MAAOJ,EAAGK,gBAAgBD,MAAOE,UAAU,QAAQC,IAAI,KAC9D,kBAACb,EAAD,iBAGF,Q,YC1COT,EAAYC,UAAOsB,OAAV,mFAAGtB,CAAH,wMAGX,qBAAGE,MAAkBqB,QCuBjBZ,eAtBS,SAAC,GACvB,MAAO,CAAEC,cADoC,EAApBA,kBAgBA,SAACY,GAC1B,MAAO,CACLC,oBAAqB,kBAAMD,ECvBtB,CACLE,KAAM,8BD0BKf,EAlBM,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,cAAea,EAA0B,EAA1BA,oBACrC,OACE,kBAAC,EAAD,CACEE,aAAW,qBACXC,MAAM,qBACNC,QAASJ,GAERb,EAAgB,kBAAC,IAAD,MAAgB,kBAAC,IAAD,UEf1Bb,EAAYC,UAAOC,QAAV,2EAAGD,CAAH,mCCiDP8B,EA5CF,WAAO,IAEAC,EACdlB,yBAAe,cADjBkB,MAASf,MAiCX,OACE,kBAAC,EAAD,KACE,kBAAC,IAAD,CAAOgB,KAAMD,IACb,kBAAC,EAAD,MACA,kBAAC,EAAD,QC5COhC,EAAYC,UAAOC,QAAV,2EAAGD,CAAH,8CCOhBiC,EAAW,SAAC,GAAc,IALXC,EAKDF,EAAW,EAAXA,KAClB,OACE,4BACE,4BACE,+BATaE,EASMF,EAAKG,YAAYC,cAR7B,IAAIC,KAAKH,GACVI,sBAON,OACA,kBAAC,OAAD,CAAMC,GAAIP,EAAKQ,OAAOC,MAAOT,EAAKG,YAAYP,MAA9C,MAEF,2BAAII,EAAKG,YAAYO,aAAeV,EAAKW,WAiBhCC,EAbF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAC7B,OACE,kBAAC,EAAD,KACE,4BAAKF,GACL,4BACGC,EAAKE,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OACR,kBAAC,EAAD,CAAUjB,KAAMiB,EAAMC,IAAKD,EAAKE,GAAIJ,QAASA,UC6CxCK,UAhEF,SAAC,GAAc,IAAZpB,EAAW,EAAXA,KAEJqB,EAGNrB,EAHFsB,KAAQD,aACcE,EAEpBvB,EAFFuB,YAAeC,MACEC,EACfzB,EADFyB,OAAUD,MAGZ,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAK5B,MAAM,QAAQc,YAAaW,EAAaX,cAC7C,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAMG,QAAQ,qBAAqBC,KAAMS,IACzC,kBAAC,EAAD,CAAMV,QAAQ,kBAAkBC,KAAMW","file":"component---src-pages-index-js-e3de8f734d6a1e670a34.js","sourcesContent":["import styled from \"styled-components\";\nimport { rgba } from \"polished\";\nimport Img from \"gatsby-image\";\nimport { boxShadow } from \"../../boxShadow/boxShadow\";\n\nexport const Container = styled.section`\n  position: absolute;\n  display: flex;\n  align-items: center;\n  top: 0;\n  left: 0;\n  background: ${({ theme }) => rgba(theme.primary, 0.9)};\n  width: 100%;\n  height: 100%;\n\n  p {\n    margin: 0.5rem 0;\n  }\n\n  @media (min-width: 360px) {\n    p {\n      margin: 1rem 0;\n    }\n  }\n`;\n\nexport const Image = styled(Img)`\n  ${({ theme }) => boxShadow(theme)};\n  width: 100%;\n  max-width: 128px;\n  margin: 0 auto 0.5rem;\n  height: auto;\n\n  @media (min-width: 360px) {\n    max-width: 160px;\n    margin: 0 auto 1rem;\n  }\n\n  @media (min-width: 484px) {\n    max-width: 192px;\n    margin: 0 calc(1rem + 2px) calc(0.5rem + 2px) 0;\n    float: left;\n  }\n\n  @media (min-width: 768px) {\n    max-width: 228px;\n  }\n`;\n\nexport const Heading = styled.h2`\n  font-size: 2rem;\n  margin: 0 0 0.5rem;\n  color: ${({ theme }) => theme.secondary};\n\n  @media (min-width: 360px) {\n    font-size: 3rem;\n    line-height: 2rem;\n    margin: 0 0 1rem;\n  }\n`;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport MdWrapper from \"../../mdWrapper/mdWrapper\";\nimport { Container, Image, Heading } from \"./author.style\";\n\nconst mapStateToProps = ({ authorVisible }) => {\n  return { authorVisible };\n};\nconst Author = ({ authorVisible }) => {\n  const {\n    me,\n    frontpage: {\n      nodes: [frontpage],\n    },\n  } = useStaticQuery(graphql`\n    query {\n      me: file(relativePath: { eq: \"me.jpg\" }) {\n        childImageSharp {\n          fluid(maxWidth: 448) {\n            ...GatsbyImageSharpFluid_tracedSVG\n          }\n        }\n      }\n      frontpage: allMarkdownRemark(\n        filter: { frontmatter: { title: { eq: \"Frontpage\" } } }\n      ) {\n        nodes {\n          frontmatter {\n            title\n          }\n          html\n        }\n      }\n    }\n  `);\n\n  return authorVisible ? (\n    <Container>\n      <MdWrapper html={frontpage.html}>\n        <Image fluid={me.childImageSharp.fluid} objectFit=\"cover\" alt=\"\" />\n        <Heading>Hello!</Heading>\n      </MdWrapper>\n    </Container>\n  ) : null;\n};\n\nexport default connect(mapStateToProps, null)(Author);\n","import styled from \"styled-components\";\n\nexport const Container = styled.button`\n  border: none;\n  background: none;\n  color: ${({ theme }) => theme.text};\n  position: absolute;\n  left: 0;\n  bottom: 0;\n  margin: 0.5rem;\n\n  svg {\n    width: 1.75rem;\n    height: 1.75rem;\n  }\n\n  @media (min-width: 425px) {\n    margin: 1rem;\n\n    svg {\n      width: 1.825rem;\n      height: 1.825rem;\n    }\n  }\n`;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { FaUserAlt, FaUserAltSlash } from \"react-icons/fa\";\nimport { Container } from \"./authorButton.style\";\nimport { toggleAuthorVisible } from \"../hero.actions\";\n\nconst mapStateToProps = ({ authorVisible }) => {\n  return { authorVisible };\n};\n\nconst AuthorButton = ({ authorVisible, toggleAuthorVisible }) => {\n  return (\n    <Container\n      aria-label=\"Toggle author info\"\n      title=\"Toggle author info\"\n      onClick={toggleAuthorVisible}\n    >\n      {authorVisible ? <FaUserAlt /> : <FaUserAltSlash />}\n    </Container>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    toggleAuthorVisible: () => dispatch(toggleAuthorVisible()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthorButton);\n","export const toggleAuthorVisible = () => {\n  return {\n    type: \"TOGGLE_AUTHOR_VISIBLE\",\n  };\n};\n","import styled from \"styled-components\";\n\nexport const Container = styled.section`\n  position: relative;\n  width: 100%;\n`;\n","import React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport Graph from \"../graph/graphWrapper\";\nimport Author from \"./author/author\";\nimport AuthorButton from \"./authorButton/authorButton\";\nimport { Container } from \"./hero.style\";\n\nconst Hero = () => {\n  const {\n    graph: { nodes: graph },\n  } = useStaticQuery(graphql`\n    query {\n      graph: allMarkdownRemark {\n        nodes {\n          id\n          frontmatter {\n            title\n          }\n          fields {\n            slug\n          }\n          outboundReferences {\n            ... on MarkdownRemark {\n              id\n              frontmatter {\n                title\n              }\n            }\n          }\n          inboundReferences {\n            ... on MarkdownRemark {\n              id\n              frontmatter {\n                title\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  return (\n    <Container>\n      <Graph data={graph} />\n      <Author />\n      <AuthorButton />\n    </Container>\n  );\n};\n\nexport default Hero;\n","import styled from \"styled-components\";\n\nexport const Container = styled.section`\n  width: calc(100% - 2rem);\n  max-width: 768px;\n`;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { Container } from \"./list.style\";\n\nconst convertDate = (str) => {\n  const date = new Date(str);\n  return date.toLocaleDateString();\n};\n\nconst ListItem = ({ data }) => {\n  return (\n    <li>\n      <h3>\n        <span>{convertDate(data.frontmatter.last_modified)} â€” </span>\n        <Link to={data.fields.slug}>{data.frontmatter.title} </Link>\n      </h3>\n      <p>{data.frontmatter.description || data.excerpt}</p>\n    </li>\n  );\n};\nconst List = ({ heading, list, details }) => {\n  return (\n    <Container>\n      <h2>{heading}</h2>\n      <ul>\n        {list.map(({ node }) => (\n          <ListItem data={node} key={node.id} details={details} />\n        ))}\n      </ul>\n    </Container>\n  );\n};\n\nexport default List;\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../components/layout/layout\";\nimport Seo from \"../components/seo/seo\";\nimport Hero from \"../components/hero/hero\";\nimport List from \"../components/list/list\";\n\nconst Home = ({ data }) => {\n  const {\n    site: { siteMetadata },\n    recommended: { edges: recommended },\n    latest: { edges: latest },\n  } = data;\n\n  return (\n    <Layout>\n      <Seo title=\"Index\" description={siteMetadata.description} />\n      <Hero />\n      <List heading=\"Recommended notes:\" list={recommended} />\n      <List heading=\"Latest updates:\" list={latest} />\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    latest: allMarkdownRemark(\n      limit: 5\n      sort: { fields: frontmatter___last_modified, order: DESC }\n    ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            description\n            date\n            last_modified\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n    recommended: allMarkdownRemark(\n      filter: { frontmatter: { recommended: { eq: true } } }\n    ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            description\n            date\n            last_modified\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\nexport default Home;\n"],"sourceRoot":""}