{"version":3,"sources":["webpack:///./src/templates/blogpost.style.js","webpack:///./src/templates/blogpost.template.js","webpack:///./src/components/layout/layout.style.js","webpack:///./src/components/layout/layout.component.js"],"names":["Image","Img","breakpoints","mobile","rhythm","tablet","Header","Section","colors","dark","BlogPost","post","data","markdownRemark","title","frontmatter","description","cover_image","imgStyle","objectFit","loading","fluid","childImageSharp","alt","date","dangerouslySetInnerHTML","__html","html","query","Main","light","Article","pageWidth","Layout","children","fixed","styles","css"],"mappings":"kQAKaA,EAAQ,YAAOC,IAAP,sBAAH,mBACGC,IAAYC,OADf,gBAENC,YAAO,IAFD,IAESA,YAAO,IAFhB,wBAIKF,IAAYG,OAJjB,qBAKKH,IAAYG,OALjB,gBAMJD,YAAO,GANH,IAMSA,YAAO,GANhB,QAULE,EAAM,sDACNF,YAAO,IADD,IACSA,YAAO,IADhB,2CAIEA,YAAO,KAJT,4EAYIF,IAAYG,OAZhB,aAaJD,YAAO,GAbH,IAaSA,YAAO,GAbhB,QAiBNG,EAAO,uDACPH,YAAO,IADA,UAETI,IAAOC,KAFE,sBAIGP,IAAYG,OAJf,2BAMLD,YAAO,GANF,kD,wBC3BL,SAASM,EAAT,GAA6B,IACpCC,EADmC,EAARC,KACfC,eAElB,OACE,8BACE,YAAC,IAAD,CACEC,MAAOH,EAAKI,YAAYD,MACxBE,YAAaL,EAAKI,YAAYC,aAE7BL,EAAKM,YACJ,YAACjB,EAAD,CACEkB,SAAU,CAAEC,UAAW,SACvBC,QAAQ,QACRC,MAAOV,EAAKM,YAAYK,gBAAgBD,MACxCE,IAAKZ,EAAKI,YAAYD,QAEtB,KACJ,YAACR,EAAD,KACE,sBAAKK,EAAKI,YAAYD,OACtB,qBAAIH,EAAKI,YAAYS,OAEvB,YAACjB,EAAD,CAASkB,wBAAyB,CAAEC,OAAQf,EAAKgB,UAMlD,IAAMC,EAAK,c,iIC5BLC,EAAI,8EAGNrB,IAAOC,KAHD,eAIDD,IAAOsB,MAJN,6BAQH1B,YAAO,GARJ,aAYJ2B,EAAO,oEAELC,IAFK,mB,gDCRL,SAASC,EAAT,GAA0D,IAAxCC,EAAuC,EAAvCA,SAAUC,EAA6B,EAA7BA,MAAOrB,EAAsB,EAAtBA,MAAOE,EAAe,EAAfA,YACvD,OACE,8BACE,YAAC,IAAD,CACEoB,OAAQC,YAAF,mBAEY7B,IAAOsB,MAFnB,QAMR,YAACD,EAAD,KACGf,GAASE,EACR,YAAC,IAAD,CAAKF,MAAOA,EAAOE,YAAaA,IAC9B,KACJ,YAAC,IAAD,CAAQmB,MAAOA,IACf,YAACJ,EAAD,KAAUG,GACV,YAAC,IAAD","file":"component---src-templates-blogpost-template-js-d4c0ebf834293e44920e.js","sourcesContent":["import styled from \"@emotion/styled\"\nimport Img from \"gatsby-image\"\nimport { rhythm } from \"../utils/typography\"\nimport { colors, breakpoints } from \"../utils/theme\"\n\nexport const Image = styled(Img)`\n  max-height: calc(${breakpoints.mobile} / 2);\n  margin: ${rhythm(0.5)} ${rhythm(0.5)} 0;\n\n  @media (min-width: ${breakpoints.tablet}) {\n    max-height: calc(${breakpoints.tablet} / 3);\n    margin: ${rhythm(1)} ${rhythm(1)} 0;\n  }\n`\n\nexport const Header = styled.header`\n  padding: ${rhythm(0.5)} ${rhythm(0.5)} 0;\n\n  & > *:not(:last-child) {\n    margin-bottom: ${rhythm(0.25)};\n  }\n\n  & > *:last-child {\n    margin-bottom: 0;\n    text-align: justify;\n  }\n\n  @media (min-width: ${breakpoints.tablet}) {\n    padding: ${rhythm(1)} ${rhythm(1)} 0;\n  }\n`\n\nexport const Section = styled.section`\n  padding: ${rhythm(0.5)};\n  color: ${colors.dark};\n\n  @media (min-width: ${breakpoints.tablet}) {\n    margin: 0 auto;\n    padding: ${rhythm(1)};\n    justify-content: space-between;\n    flex-flow: row;\n  }\n`\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport { Image, Header, Section } from \"./blogpost.style\"\nimport Layout from \"../components/layout/layout.component\"\n\nexport default function BlogPost({ data }) {\n  const post = data.markdownRemark\n\n  return (\n    <>\n      <Layout\n        title={post.frontmatter.title}\n        description={post.frontmatter.description}\n      >\n        {post.cover_image ? (\n          <Image\n            imgStyle={{ objectFit: \"cover\" }}\n            loading=\"eager\"\n            fluid={post.cover_image.childImageSharp.fluid}\n            alt={post.frontmatter.title}\n          />\n        ) : null}\n        <Header>\n          <h1>{post.frontmatter.title}</h1>\n          <p>{post.frontmatter.date}</p>\n        </Header>\n        <Section dangerouslySetInnerHTML={{ __html: post.html }} />\n      </Layout>\n    </>\n  )\n}\n\nexport const query = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n        date(formatString: \"DD MMMM, YYYY\")\n        description\n      }\n      cover_image {\n        childImageSharp {\n          fluid(\n            maxWidth: 2560\n            duotone: { highlight: \"#F8F7FF\", shadow: \"#1E1E24\" }\n          ) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  }\n`\n","import styled from \"@emotion/styled\"\nimport { rhythm } from \"../../utils/typography\"\nimport { colors, pageWidth } from \"../../utils/theme\"\n\nexport const Main = styled.main`\n  z-index: 3;\n  position: relative;\n  color: ${colors.dark};\n  background: ${colors.light};\n  width: 100%;\n\n  footer {\n    margin: ${rhythm(1)} auto 0;\n  }\n`\n\nexport const Article = styled.article`\n  width: 100%;\n  max-width: ${pageWidth};\n  margin: 0 auto;\n`\n","import React from \"react\"\nimport { Main, Article } from \"./layout.style\"\nimport { Global, css } from \"@emotion/core\"\nimport { colors } from \"../../utils/theme\"\nimport Footer from \"../footer/footer.component\"\nimport Navbar from \"../navbar/navbar.component\"\nimport SEO from \"../seo/seo.component\"\n\nexport default function Layout({ children, fixed, title, description }) {\n  return (\n    <>\n      <Global\n        styles={css`\n          html {\n            background: ${colors.light};\n          }\n        `}\n      />\n      <Main>\n        {title && description ? (\n          <SEO title={title} description={description} />\n        ) : null}\n        <Navbar fixed={fixed} />\n        <Article>{children}</Article>\n        <Footer />\n      </Main>\n    </>\n  )\n}\n"],"sourceRoot":""}