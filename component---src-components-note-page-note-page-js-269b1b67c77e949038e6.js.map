{"version":3,"sources":["webpack:///./src/components/notePage/components/references.js","webpack:///./src/components/notePage/components/article.js","webpack:///./src/components/notePage/components/graphButton.js","webpack:///./src/components/notePage/notePage.js"],"names":["Container","styled","section","props","theme","secondary","References","arr","heading","length","map","el","key","id","to","fields","slug","frontmatter","title","article","sectionContainer","convertDate","str","Date","toLocaleDateString","Article","data","body","date","last_modified","description","connect","dispatch","toggleGraph","type","aria-label","onClick","graph","note","mdx","button","outboundReferences","inboundReferences"],"mappings":"+JAIMA,EAAYC,UAAOC,QAAV,4EAAGD,CAAH,mGAEQ,SAACE,GAAD,OAAWA,EAAMC,MAAMC,aA4B/BC,EAnBI,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,IAAKC,EAAc,EAAdA,QACzB,OAAmB,IAAfD,EAAIE,OAAqB,KAG3B,kBAACT,EAAD,KACE,4BAAKQ,GACL,4BACGD,EAAIG,KAAI,SAACC,GACR,OACE,wBAAIC,IAAKD,EAAGE,IACV,kBAAC,OAAD,CAAMC,GAAIH,EAAGI,OAAOC,MAAOL,EAAGM,YAAYC,c,wBCpBlDlB,EAAYC,UAAOkB,QAAV,yEAAGlB,CAAH,yJAUc,SAACE,GAAD,OAAWA,EAAMC,MAAMC,aAI9C,gBAAGD,EAAH,EAAGA,MAAH,OAAegB,YAAiBhB,MAMhCiB,EAAc,SAACC,GAEnB,OADa,IAAIC,KAAKD,GACVE,sBA2BCC,EAxBC,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAEfC,EAEED,EAFFC,KAF0B,EAIxBD,EADFT,YAAeC,EAHW,EAGXA,MAAOU,EAHI,EAGJA,KAAMC,EAHF,EAGEA,cAAeC,EAHjB,EAGiBA,YAG7C,OACE,kBAAC,EAAD,KACE,4BAAKZ,GACL,2BACE,4CADF,IAC2BG,EAAYO,GACpCC,IAAkBD,EACjB,8CACU,2CACPP,EAAYQ,IAEb,MAEN,2BAAIC,GACJ,kBAAC,IAAD,CAAYH,KAAMA,M,gDC7BTI,cAAQ,MAJI,SAACC,GAC1B,MAAO,CAAEC,YAAa,kBAAMD,EAAS,CAAEE,KAAK,qBAG/BH,EAhBK,SAAC,GAAqB,IAAnBE,EAAkB,EAAlBA,YACrB,OACE,4BACEE,aAAW,eACXjB,MAAM,eACNkB,QAASH,GAET,kBAAC,IAAD,UC4DSF,uBA7DS,SAAC,GACvB,MAAO,CAAEM,MAD4B,EAAZA,SA6Da,KAAzBN,EAzDE,SAAC,GAAqB,IAAnBL,EAAkB,EAAlBA,KAAMW,EAAY,EAAZA,MAClBC,EAAOZ,EAAKa,IAElB,OACE,kBAAC,IAAD,CAAQC,OAAQ,kBAAC,EAAD,OACd,kBAAC,IAAD,CACEtB,MAAOoB,EAAKrB,YAAYC,MACxBY,YAAaQ,EAAKrB,YAAYa,cAE/BO,EAAQ,kBAAC,IAAD,CAAOX,KAAM,CAACY,KAAY,KACnC,kBAAC,EAAD,CAASZ,KAAMY,IACf,kBAAC,EAAD,CAAY9B,QAAQ,gBAAgBD,IAAK+B,EAAKG,qBAC9C,kBAAC,EAAD,CAAYjC,QAAQ,eAAeD,IAAK+B,EAAKI","file":"component---src-components-note-page-note-page-js-269b1b67c77e949038e6.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"gatsby\";\n\nconst Container = styled.section`\n  width: calc(100% - 2rem);\n  border: 2px dashed ${(props) => props.theme.secondary};\n  margin: 1rem 0;\n  padding: 0 1rem;\n\n  ul {\n    margin: 1rem 0;\n  }\n`;\n\nconst References = ({ arr, heading }) => {\n  if (arr.length === 0) return null;\n\n  return (\n    <Container>\n      <h3>{heading}</h3>\n      <ul>\n        {arr.map((el) => {\n          return (\n            <li key={el.id}>\n              <Link to={el.fields.slug}>{el.frontmatter.title}</Link>\n            </li>\n          );\n        })}\n      </ul>\n    </Container>\n  );\n};\n\nexport default References;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { sectionContainer } from \"../../sectionContainer\";\nimport MdxContent from \"../../mdxContent\";\n\nconst Container = styled.article`\n  width: 100%;\n  height: 100%;\n  flex: 1;\n\n  h2 {\n    margin: 1.25rem 0;\n  }\n\n  section {\n    border-top: 2px dashed ${(props) => props.theme.secondary};\n  }\n\n  .gatsby-resp-image-wrapper {\n    ${({ theme }) => sectionContainer(theme)};\n    width: 100%;\n    margin: 0 0 0.5rem;\n  }\n`;\n\nconst convertDate = (str) => {\n  const date = new Date(str);\n  return date.toLocaleDateString();\n};\n\nconst Article = ({ data }) => {\n  const {\n    body,\n    frontmatter: { title, date, last_modified, description },\n  } = data;\n\n  return (\n    <Container>\n      <h2>{title}</h2>\n      <p>\n        <span>Published:</span> {convertDate(date)}\n        {last_modified !== date ? (\n          <>\n            {` | `} <span>Modified:</span>\n            {convertDate(last_modified)}\n          </>\n        ) : null}\n      </p>\n      <p>{description}</p>\n      <MdxContent body={body} />\n    </Container>\n  );\n};\n\nexport default Article;\n","import React from \"react\";\nimport { FaProjectDiagram } from \"react-icons/fa\";\nimport { connect } from \"react-redux\";\n\nconst GraphButton = ({ toggleGraph }) => {\n  return (\n    <button\n      aria-label=\"Toggle graph\"\n      title=\"Toggle graph\"\n      onClick={toggleGraph}\n    >\n      <FaProjectDiagram />\n    </button>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return { toggleGraph: () => dispatch({ type: `TOGGLE_GRAPH` }) };\n};\n\nexport default connect(null, mapDispatchToProps)(GraphButton);\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../layout/layout\";\nimport References from \"./components/references\";\nimport Article from \"./components/article\";\nimport Graph from \"../graph/graphWrapper\";\nimport Seo from \"../seo\";\nimport GraphButton from \"./components/graphButton\";\nimport { connect } from \"react-redux\";\n\nconst mapStateToProps = ({ graph }) => {\n  return { graph };\n};\n\nconst NotePage = ({ data, graph }) => {\n  const note = data.mdx;\n\n  return (\n    <Layout button={<GraphButton />}>\n      <Seo\n        title={note.frontmatter.title}\n        description={note.frontmatter.description}\n      />\n      {graph ? <Graph data={[note]} /> : null}\n      <Article data={note} />\n      <References heading=\"In this note:\" arr={note.outboundReferences} />\n      <References heading=\"Reffered in:\" arr={note.inboundReferences} />\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query($slug: String!) {\n    mdx(fields: { slug: { eq: $slug } }) {\n      id\n      body\n      frontmatter {\n        title\n        date\n        description\n        last_modified\n      }\n      fields {\n        slug\n      }\n      outboundReferences {\n        ... on Mdx {\n          id\n          frontmatter {\n            title\n          }\n          fields {\n            slug\n          }\n        }\n      }\n      inboundReferences {\n        ... on Mdx {\n          id\n          frontmatter {\n            title\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default connect(mapStateToProps, null)(NotePage);\n"],"sourceRoot":""}