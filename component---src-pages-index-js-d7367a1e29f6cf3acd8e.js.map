{"version":3,"sources":["webpack:///./src/components/header/header.style.js","webpack:///./src/components/header/header.component.js","webpack:///./src/components/index/index.style.js","webpack:///./src/components/index/blogpostLink/blogpostLink.style.js","webpack:///./src/components/index/blogpostLink/blogpostLink.component.js","webpack:///./src/pages/index.js","webpack:///./src/components/layout/layout.style.js","webpack:///./src/components/layout/layout.component.js"],"names":["Container","rhythm","breakpoints","tablet","Paragraph","Span","colors","accent","Picture","Img","mobile","Header","useStaticQuery","data","githubData","user","fluid","file","childImageSharp","objectFit","alt","name","href","url","target","rel","login","Hyperlink","Link","Image","BlogpostLink","node","cover_image","frontmatter","title","date","description","Home","allMarkdownRemark","edges","map","key","id","to","fields","slug","query","Main","dark","light","Article","pageWidth","Layout","children","fixed","styles","css"],"mappings":"kNAKaA,EAAS,kEAEXC,YAAO,GAFI,IAEEA,YAAO,IAFT,IAEiBA,YAAO,IAFxB,uDAMDC,IAAYC,OANX,uBAQTF,YAAO,GARE,IAQIA,YAAO,GARX,IAQiBA,YAAO,GARxB,KAWTG,EAAS,iHAOTC,EAAI,sEAIJC,IAAOC,OAJH,2BASJC,EAAU,YAAOC,IAAP,qBAAH,kCAGGP,IAAYQ,OAHf,yBAKPT,YAAO,GALA,2CAQJA,YAAO,IARH,2BAWGC,IAAYC,OAXf,WAYPF,YAAO,GAZA,yBAcJA,YAAO,GAdH,U,YC5BL,SAASU,IAAU,IAAD,EACXC,yBAAe,cAAxBC,EADoB,oBAwBzBC,EAAU,iBAAQD,EAAKC,WAAWD,KAAKE,MAE7C,OACE,YAACf,EAAD,KACE,YAACQ,EAAD,CACEQ,MAAOH,EAAKI,KAAKC,gBAAgBF,MACjCG,UAAU,QACVC,IAAI,YAEN,YAAChB,EAAD,KACE,YAACC,EAAD,KACGS,EAAWO,KAAM,IAClB,iBAAGC,KAAMR,EAAWS,IAAKC,OAAO,SAASC,IAAI,uBAA7C,IACIX,EAAWY,QAGjB,uBAPF,gH,iMCjCOC,EAAY,YAAOC,OAAP,sBAAH,6EASTtB,IAAOC,OATE,eAaPD,IAAOC,OAbA,O,iCCCTP,EAAS,sDACTC,YAAO,IADE,2DAYCC,IAAYC,OAZb,aAaPF,YAAO,GAbA,MAiBTU,EAAM,wIAKAV,YAAO,EAAI,GALX,KAQN4B,EAAQ,YAAOpB,IAAP,qBAAH,iBACCR,YAAO,EAAI,GADZ,oBAEGC,IAAYQ,OAFf,2BAIKR,IAAYC,OAJjB,qBAKKD,IAAYC,OALjB,W,YC3BH,SAAS2B,EAAT,GAAiC,IAATC,EAAQ,EAARA,KACrC,OACE,YAAC/B,EAAD,KACG+B,EAAKC,YACJ,YAACH,EAAD,CACEb,MAAOe,EAAKC,YAAYd,gBAAgBF,MACxCG,UAAU,UACVC,IAAI,KAEJ,KACJ,YAACT,EAAD,KACE,sBAAKoB,EAAKE,YAAYC,OACtB,qBAAIH,EAAKE,YAAYE,OAEvB,qBAAIJ,EAAKE,YAAYG,cCVZ,SAASC,EAAT,GAAyB,IAATxB,EAAQ,EAARA,KAC7B,OACE,YAAC,IAAD,CACEqB,MAAO,OACPE,YAAa,6DAEb,YAAC,IAAD,MACCvB,EAAKyB,kBAAkBC,MAAMC,KAAI,gBAAGT,EAAH,EAAGA,KAAH,OAChC,YAACJ,EAAD,CAAWc,IAAKV,EAAKW,GAAIC,GAAIZ,EAAKa,OAAOC,MACvC,YAACf,EAAD,CAAcC,KAAMA,SAOvB,IAAMe,EAAK,a,iICnBLC,EAAI,8EAGNzC,IAAO0C,KAHD,eAID1C,IAAO2C,MAJN,6BAQHhD,YAAO,GARJ,aAYJiD,EAAO,oEAELC,IAFK,mB,gDCRL,SAASC,EAAT,GAA0D,IAAxCC,EAAuC,EAAvCA,SAAUC,EAA6B,EAA7BA,MAAOpB,EAAsB,EAAtBA,MAAOE,EAAe,EAAfA,YACvD,OACE,8BACE,YAAC,IAAD,CACEmB,OAAQC,YAAF,mBAEYlD,IAAO2C,MAFnB,QAMR,YAACF,EAAD,KACGb,GAASE,EACR,YAAC,IAAD,CAAKF,MAAOA,EAAOE,YAAaA,IAC9B,KACJ,YAAC,IAAD,CAAQkB,MAAOA,IACf,YAACJ,EAAD,KAAUG,GACV,YAAC,IAAD","file":"component---src-pages-index-js-d7367a1e29f6cf3acd8e.js","sourcesContent":["import styled from \"@emotion/styled\"\nimport Img from \"gatsby-image\"\nimport { rhythm } from \"../../utils/typography\"\nimport { colors, breakpoints } from \"../../utils/theme\"\n\nexport const Container = styled.header`\ndisplay: flex;\npadding: ${rhythm(1)} ${rhythm(0.5)} ${rhythm(0.5)};\nalign-items: center;\nmargin: 0 auto;\n\n@media (min-width: ${breakpoints.tablet}) {\n  width: 75%;\n  padding: ${rhythm(2)} ${rhythm(1)} ${rhythm(1)};\n`\n\nexport const Paragraph = styled.p`\n  width: 100%;\n  padding: 0;\n  margin: 0;\n  text-align: justify;\n`\n\nexport const Span = styled.span`\n  font-weight: bold;\n\n  & a {\n    color: ${colors.accent};\n    text-decoration: none;\n  }\n`\n\nexport const Picture = styled(Img)`\n  display: none;\n  \n  @media (min-width: ${breakpoints.mobile}) {\n    display: block;\n    width: ${rhythm(4)};\n    height: 100%;\n    border-radius: 50%;\n    margin: 0 ${rhythm(0.5)} 0 0;\n  }\n\n  @media (min-width: ${breakpoints.tablet}) {\n    width: ${rhythm(6)};\n    height: 100%;\n    margin: 0 ${rhythm(1)} 0 0;\n  }\n`\n","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { Container, Picture, Paragraph, Span } from \"./header.style\"\n\nexport default function Header() {\n  const { ...data } = useStaticQuery(\n    graphql`\n      query {\n        file(relativePath: { eq: \"images/avatar.jpg\" }) {\n          childImageSharp {\n            fluid(maxWidth: 440) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        githubData {\n          data {\n            user {\n              url\n              name\n              login\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const githubData = { ...data.githubData.data.user }\n\n  return (\n    <Container>\n      <Picture\n        fluid={data.file.childImageSharp.fluid}\n        objectFit=\"cover\"\n        alt=\"Just me\"\n      />\n      <Paragraph>\n        <Span>\n          {githubData.name}{\" \"}\n          <a href={githubData.url} target=\"_blank\" rel=\"noopener noreferrer\">\n            @{githubData.login}\n          </a>\n        </Span>\n        <br />\n        I'm writing about my adventures in development, computer hardware, and\n        other ideas that spark in my mind.\n      </Paragraph>\n    </Container>\n  )\n}\n","import styled from \"@emotion/styled\"\nimport { colors } from \"../../utils/theme\"\nimport { Link } from \"gatsby\"\n\nexport const Hyperlink = styled(Link)`\n  color: inherit;\n  text-decoration: none;\n\n  &:visited {\n    color: inherit;\n  }\n\n  &:hover {\n    color: ${colors.accent};\n\n    h3,\n    p {\n      color: ${colors.accent};\n    }\n  }\n`\n","import styled from \"@emotion/styled\"\nimport { breakpoints } from \"../../../utils/theme\"\nimport { rhythm } from \"../../../utils/typography\"\nimport Img from \"gatsby-image\"\n\nexport const Container = styled.section`\n  padding: ${rhythm(0.5)};\n\n  p {\n    text-align: justify;\n  }\n\n  p,\n  h3 {\n    margin: 0;\n  }\n\n  @media (min-width: ${breakpoints.tablet}) {\n    padding: ${rhythm(1)};\n  }\n`\n\nexport const Header = styled.header`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-wrap: wrap;\n  margin-bottom: ${rhythm(1 / 4)};\n`\n\nexport const Image = styled(Img)`\n  margin-bottom: ${rhythm(1 / 4)};\n  max-height: calc(${breakpoints.mobile} / 2);\n\n  @media (min-width: ${breakpoints.tablet}) {\n    max-height: calc(${breakpoints.tablet} / 3);\n  }\n`\n","import React from \"react\"\nimport { Header, Container, Image } from \"./blogpostLink.style\"\n\nexport default function BlogpostLink({ node }) {\n  return (\n    <Container>\n      {node.cover_image ? (\n        <Image\n          fluid={node.cover_image.childImageSharp.fluid}\n          objectFit=\"contain\"\n          alt=\"\"\n        />\n      ) : null}\n      <Header>\n        <h3>{node.frontmatter.title}</h3>\n        <p>{node.frontmatter.date}</p>\n      </Header>\n      <p>{node.frontmatter.description}</p>\n    </Container>\n  )\n}\n","import React from \"react\"\nimport Layout from \"../components/layout/layout.component\"\nimport Header from \"../components/header/header.component\"\nimport { Hyperlink } from \"../components/index/index.style\"\nimport { graphql } from \"gatsby\"\nimport BlogpostLink from \"../components/index/blogpostLink/blogpostLink.component\"\n\nexport default function Home({ data }) {\n  return (\n    <Layout\n      title={\"Blog\"}\n      description={\"Recent news from my journey in the web development world.\"}\n    >\n      <Header />\n      {data.allMarkdownRemark.edges.map(({ node }) => (\n        <Hyperlink key={node.id} to={node.fields.slug}>\n          <BlogpostLink node={node} />\n        </Hyperlink>\n      ))}\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n            description\n            tags\n          }\n          cover_image {\n            childImageSharp {\n              fluid(\n                maxWidth: 2560\n                duotone: { highlight: \"#F8F7FF\", shadow: \"#1E1E24\" }\n              ) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`\n","import styled from \"@emotion/styled\"\nimport { rhythm } from \"../../utils/typography\"\nimport { colors, pageWidth } from \"../../utils/theme\"\n\nexport const Main = styled.main`\n  z-index: 3;\n  position: relative;\n  color: ${colors.dark};\n  background: ${colors.light};\n  width: 100%;\n\n  footer {\n    margin: ${rhythm(1)} auto 0;\n  }\n`\n\nexport const Article = styled.article`\n  width: 100%;\n  max-width: ${pageWidth};\n  margin: 0 auto;\n`\n","import React from \"react\"\nimport { Main, Article } from \"./layout.style\"\nimport { Global, css } from \"@emotion/core\"\nimport { colors } from \"../../utils/theme\"\nimport Footer from \"../footer/footer.component\"\nimport Navbar from \"../navbar/navbar.component\"\nimport SEO from \"../seo/seo.component\"\n\nexport default function Layout({ children, fixed, title, description }) {\n  return (\n    <>\n      <Global\n        styles={css`\n          html {\n            background: ${colors.light};\n          }\n        `}\n      />\n      <Main>\n        {title && description ? (\n          <SEO title={title} description={description} />\n        ) : null}\n        <Navbar fixed={fixed} />\n        <Article>{children}</Article>\n        <Footer />\n      </Main>\n    </>\n  )\n}\n"],"sourceRoot":""}